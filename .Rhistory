knitr::opts_chunk$set(echo = FALSE, warning =  FALSE)
library(coronavirus)
library(tidyr)
library(dplyr)
library(lubridate)
library(reactable)
library(htmltools)
library(kableExtra)
library(DT)
library(ggplot2)
library(plotly)
library(widgetframe)
library(bookdown)
Pak <- coronavirus %>%  filter(country == "Pakistan") %>%
select(date, country, type, cases) %>%
filter(date > "2020-01-31")
Paki <- Pak %>% mutate(Month = month(date,
label = TRUE,
abbr = TRUE)) %>%
mutate(Week = week(date))  %>%
mutate(Day = day(date))  %>%
pivot_wider(names_from = type,
values_from = cases)  %>%
filter(confirmed > "0") %>%
select(-date, - country) %>%
rename(Confirmed = "confirmed",
Death = "death",
Recovered = "recovered")
dt <- datatable(Paki, options = list(pageLength = 10), class = 'cell-border stripe', filter = 'top')
frameWidget(dt)
Pakis <- Paki %>% select(Confirmed, Death, Recovered)
summary(Pakis) %>% kable() %>% kable_styling(bootstrap_options = "striped",
full_width = NULL,
position = "center",
font_size = NULL,
row_label_position = "l",
repeat_header_continued = FALSE,
stripe_color = "gray!6",
stripe_index = NULL,
table.envir = "table",
fixed_thead = FALSE)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
knitr::opts_chunk$set(echo = TRUE)
library(coronavirus)
library(tidyr)
library(dplyr)
library(lubridate)
library(reactable)
library(htmltools)
library(kableExtra)
library(DT)
library(ggplot2)
library(plotly)
library(widgetframe)
library(bookdown)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(tidyr)
library(plotly)
library(coronavirus)
library(gridExtra)
library(lubridate)
c19 <- read.csv("owid-covid-data.csv")
c19 <- read.csv("content/post/owid-covid-data.csv")
Romania <- c19 %>% filter(location == "Romania") %>%
select(-iso_code,
-continent,
-location) %>%
filter(date > 	"2020-02-26") %>% mutate(date = as.Date(date))
Romi <- c19 %>% filter(location == "Romania") %>%
select( date, new_cases, new_tests) %>%
filter(date > 	"2020-02-29")  %>% mutate(Month = month(date,label = TRUE,abbr = FALSE)) %>% na.omit()
rp <- Romi %>% ggplot( aes(x= new_tests,
y = new_cases,
color = Month)) +
geom_point() # + facet_wrap(~ month(date)) + geom_smooth()
rp2 <- rp + facet_wrap(~ Month)
ggplotly(rp)
rp <- Romi %>% ggplot( aes(x= new_tests,
y = new_cases,
color = Month)) +
geom_point() # + facet_wrap(~ month(date)) + geom_smooth()
rp2 <- rp + facet_wrap(~ Month)
ggplotly(rp)
View(c19)
Romania
Romania %>% select(date, total_cases, new_cases,new_cases_per_million, total_deaths, new_deaths,new_tests, total_tests, stringency_index)
tab<- Romania %>% select(date, total_cases, new_cases,new_cases_per_million, total_deaths, new_deaths,new_tests, total_tests, stringency_index)
head(tab, 10)
tab<- Romania %>% select(date, total_cases, new_cases,new_cases_per_million, total_deaths, new_deaths,new_tests, total_tests, stringency_index) %>% na.omit()
head(tab, 10)
tab<- Romania %>% select(date, total_cases, new_cases,new_cases_per_million, total_deaths, new_deaths,new_tests, total_tests, stringency_index) %>% na.omit() %>% kable( ) %>% kable_styling()
head(tab, 10)
tab<- Romania %>% select(date, total_cases, new_cases,new_cases_per_million, total_deaths, new_deaths,new_tests, total_tests, stringency_index) %>% na.omit() %>% kable( ) %>% kable_styling(full_width = NULL,
position = "center",
font_size = NULL,
row_label_position = "l",
repeat_header_continued = FALSE,
stripe_color = "black",
stripe_index = NULL,
table.envir = "table",
fixed_thead = FALSE)
head(tab, 10)
tab<- Romania %>% select(date, total_cases, new_cases,new_cases_per_million, total_deaths, new_deaths,new_tests, total_tests, stringency_index) %>% na.omit() %>% kable( ) %>% kable_styling(full_width = NULL,
position = "center",
font_size = NULL,
row_label_position = "l",
repeat_header_continued = FALSE,
stripe_color = "black",
stripe_index = NULL,
table.envir = "table",
fixed_thead = FALSE)
tab
str(tab)
tab<- Romania %>% select(date, total_cases, new_cases,new_cases_per_million, total_deaths, new_deaths,new_tests, total_tests, stringency_index) %>% na.omit()
str(tab)
tab<- Romania %>% select(date, total_cases, new_cases,new_cases_per_million, total_deaths, new_deaths,new_tests, total_tests, stringency_index) %>% na.omit() %>% kable( ) %>% kable_styling(full_width = NULL,
position = "center",
font_size = NULL,
row_label_position = "l",
repeat_header_continued = FALSE,
stripe_color = "black",
stripe_index = NULL,
table.envir = "table",
fixed_thead = FALSE)
tab
tab<- Romania %>% select(date, total_cases, new_cases,new_cases_per_million, total_deaths, new_deaths,new_tests, total_tests, stringency_index) %>% na.omit() %>% filter(date< 	2020-03-18)%>% kable( ) %>% kable_styling(full_width = NULL,
position = "center",
font_size = NULL,
row_label_position = "l",
repeat_header_continued = FALSE,
stripe_color = "black",
stripe_index = NULL,
table.envir = "table",
fixed_thead = FALSE)
tab
tab<- Romania %>% select(date, total_cases, new_cases,new_cases_per_million, total_deaths, new_deaths,new_tests, total_tests, stringency_index) %>% na.omit() %>% filter(date =< 	2020-03-18)%>% kable( ) %>% kable_styling(full_width = NULL,
tab<- Romania %>% select(date, total_cases, new_cases,new_cases_per_million, total_deaths, new_deaths,new_tests, total_tests, stringency_index) %>% na.omit() %>% filter(date < 	"2020-03-18")%>% kable( ) %>% kable_styling(full_width = NULL,
position = "center",
font_size = NULL,
row_label_position = "l",
repeat_header_continued = FALSE,
stripe_color = "black",
stripe_index = NULL,
table.envir = "table",
fixed_thead = FALSE)
tab
c19 <- read.csv("content/post/owid-covid-data.csv")
c19 <- read.csv("content/post/owid-covid-data.csv")
c19 <- read.csv("content/post/owid-covid-data.csv")
c19 <- read.csv("post/owid-covid-data.csv")
c19 <- read.csv("owid-covid-data.csv")
Romania <- c19 %>% filter(location == "Romania") %>%
select(-iso_code,
-continent,
-location) %>%
filter(date > 	"2020-02-26") %>% mutate(date = as.Date(date))
str(tab)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(tidyr)
library(plotly)
library(coronavirus)
library(gridExtra)
library(lubridate)
library(kableExtra)
tab<- Romania %>% select(date, total_cases, new_cases,new_cases_per_million, total_deaths, new_deaths,new_tests, total_tests, stringency_index) %>% na.omit()
str(tab)
knitr::opts_chunk$set(echo = FALSE, warning =  FALSE)
library(coronavirus)
library(tidyr)
library(dplyr)
library(lubridate)
library(reactable)
library(htmltools)
library(kableExtra)
library(DT)
library(ggplot2)
library(plotly)
library(widgetframe)
library(bookdown)
Pakis <- Paki %>% select(Confirmed, Death, Recovered)
summary(Pakis) %>% kable(table.attr = "style = \"color: #00FA9A;background-color:#1E90FF;\"") %>% kable_styling(bootstrap_options = "striped",
full_width = NULL,
position = "center",
font_size = NULL,
row_label_position = "l",
repeat_header_continued = FALSE,
stripe_color = "black",
stripe_index = NULL,
table.envir = "table",
fixed_thead = FALSE)
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
View(Romania)
knitr::opts_chunk$set(echo = FALSE)
library(readr)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(tidyr)
library(plotly)
library(coronavirus)
library(gridExtra)
library(lubridate)
library(kableExtra)
ro$Month<- factor(ro$Month, levels = c("March", "April", "May", "June", "July","August"))
Rom <- coronavirus %>% filter(country == "Romania") %>%
pivot_wider(names_from = type,
values_from = cases ) %>%
select(date,
recovered) %>%
filter(date >"2020-02-26") %>%
na.omit
ro <- full_join(Rom, Romania, by = "date") %>% select(date, new_deaths, recovered) %>% na.omit() %>% mutate(Month = months(date)) %>% filter(date > "2020-02-29	") %>% rename( deaths= "new_deaths")
ro$Month<- factor(ro$Month, levels = c("March", "April", "May", "June", "July","August"))
rp2 <- ro %>% ggplot(aes(x=deaths, y=recovered, color = Month)) + geom_point() + facet_wrap(~Month)
rp3 <- ro %>% ggplot(aes(x=deaths, y=recovered, color = Month)) + geom_point()
p1 <- ggplotly(rp2)
p2 <- ggplotly(rp3)
p2
p2 +geom_smooth()
p2
int_stin <- Romania %>% ggplot(aes(x = date,
y = stringency_index)) +
geom_line(color = "blue") +
geom_point(x= Romania$date,
y = Romania$new_cases_per_million,
col = "cyan", show.legend = TRUE) +
ylim(0,90)  +
scale_x_date(date_labels = "%B",
date_breaks = "1 month")  +
theme(axis.text.x = element_text(angle=45,
hjust = 1))
#+ facet_wrap(~month)#+ xlim(0,100)
#+geom_smooth()
#+ geom_vline(xintercept = dates,col = "red", lwd = 1) #+ facet_wrap(~month)
#+ geom_vline(aes(xintercept = "2020-03-23" , color = "blue"))
int_stin
ggplotly(int_stin)
ggplotly(int_stin)
int_stin <- Romania %>% ggplot(aes(x = date,
y = stringency_index)) +
geom_line(color = "blue") +
geom_point(x= Romania$date,
y = Romania$new_cases_per_million,
col = "cyan",
show.legend = TRUE) +
ylim(0,90)  +
scale_x_date(date_labels = "%B",
date_breaks = "1 month")  +
theme(axis.text.x = element_text(angle=45,
hjust = 1))
int_stin
ggplotly(int_stin)
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
glimpse(Romania)
knitr::opts_chunk$set(echo = FALSE)
library(readr)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(tidyr)
library(plotly)
library(coronavirus)
library(gridExtra)
library(lubridate)
library(kableExtra)
c19 <- read.csv("owid-covid-data.csv")
Romania <- c19 %>% filter(location == "Romania") %>%
select(-iso_code,
-continent,
-location) %>%
filter(date > 	"2020-02-26") %>%
mutate(date = as.Date(date))
glimpse(Romania)
knitr::opts_chunk$set(echo = FALSE)
library(readr)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(tidyr)
library(plotly)
library(coronavirus)
library(gridExtra)
library(lubridate)
library(kableExtra)
c19 <- read.csv("owid-covid-data.csv")
Romania <- c19 %>% filter(location == "Romania") %>%
select(-iso_code,
-continent,
-location) %>%
filter(date > 	"2020-02-26") %>%
mutate(date = as.Date(date))
Romi <- c19 %>% filter(location == "Romania") %>%
select( date,
new_cases,
new_tests) %>%
filter(date > 	"2020-02-29")  %>%
mutate(Month = month(date,label = TRUE,
abbr = FALSE)) %>%
na.omit()
rp <- Romi %>% ggplot( aes(x= new_tests,
y = new_cases,
color = Month)) +
geom_point() +
labs(title = "Range of Salaries offered by Industry to Data Analysts",
caption = "According to GlassDoor",
subtitle = "Starting from $50,000 to $125,000 a year",
x = "Salary Range in AUD",
y = " ")
rp2 <- rp + facet_wrap(~ Month)
ggplotly(rp)
rp <- Romi %>% ggplot( aes(x= new_tests,
y = new_cases,
color = Month)) +
geom_point() +
labs(title = "Range of Salaries offered by Industry to Data Analysts",
caption = "According to GlassDoor",
subtitle = "Starting from $50,000 to $125,000 a year",
)
rp <- Romi %>% ggplot( aes(x= new_tests,
y = new_cases,
color = Month)) +
geom_point() +
labs(title = "Range of Salaries offered by Industry to Data Analysts",
caption = "According to GlassDoor",
subtitle = "Starting from $50,000 to $125,000 a year"
)
rp2 <- rp + facet_wrap(~ Month)
ggplotly(rp)
rp <- Romi %>% ggplot( aes(x= new_tests,
y = new_cases,
color = Month)) +
geom_point() +
labs(title = "New cases reported with new tests performed"
)
rp2 <- rp + facet_wrap(~ Month)
ggplotly(rp)
Rom <- coronavirus %>% filter(country == "Romania") %>%
pivot_wider(names_from = type,
values_from = cases ) %>%
select(date,
recovered) %>%
filter(date >"2020-02-26") %>%
na.omit
ro <- full_join(Rom,
Romania,
by = "date") %>%
select(date,
new_deaths,
recovered) %>%
na.omit() %>%
mutate(Month = months(date)) %>%
filter(date > "2020-02-29	") %>%
rename( deaths= "new_deaths")
ro$Month<- factor(ro$Month, levels = c("March", "April", "May", "June", "July","August"))
rp2 <- ro %>% ggplot(aes(x=deaths, y=recovered, color = Month)) + geom_point() + facet_wrap(~Month)
rp3 <- ro %>% ggplot(aes(x=deaths, y=recovered, color = Month)) + geom_point()
p1 <- ggplotly(rp2)
p2 <- ggplotly(rp3)
p2  +
labs(title = "New cases reported with new tests performed"
)
ro$Month<- factor(ro$Month, levels = c("March", "April", "May", "June", "July","August"))
rp2 <- ro %>% ggplot(aes(x=deaths, y=recovered, color = Month)) + geom_point() + facet_wrap(~Month)
rp3 <- ro %>% ggplot(aes(x=deaths, y=recovered, color = Month)) + geom_point()
p1 <- ggplotly(rp2)
p2 <- ggplotly(rp3)
p2  +  labs(title = "New cases reported with new tests performed")
ro$Month<- factor(ro$Month, levels = c("March", "April", "May", "June", "July","August"))
rp2 <- ro %>% ggplot(aes(x=deaths, y=recovered, color = Month)) + geom_point() + facet_wrap(~Month)
rp3 <- ro %>% ggplot(aes(x=deaths, y=recovered, color = Month)) + geom_point() +  labs(title = "New cases reported with new tests performed")
p1 <- ggplotly(rp2)
p2 <- ggplotly(rp3)
p2
rp <- Romi %>% ggplot( aes(x= new_tests,
y = new_cases,
color = Month)) +
geom_point() +
labs(title = "New cases reported with new tests performed in Romania"
)
rp2 <- rp + facet_wrap(~ Month)
ggplotly(rp)
ro$Month<- factor(ro$Month, levels = c("March", "April", "May", "June", "July","August"))
rp2 <- ro %>% ggplot(aes(x=deaths, y=recovered, color = Month)) + geom_point() + facet_wrap(~Month)
rp3 <- ro %>% ggplot(aes(x=deaths, y=recovered, color = Month)) + geom_point() +  labs(title = "Recovered to Death ratio of covid-19 positive cases in Romania")
p1 <- ggplotly(rp2)
p2 <- ggplotly(rp3)
p2
int_stin <- Romania %>% ggplot(aes(x = date,
y = stringency_index)) +
geom_line(color = "blue") +
geom_point(x= Romania$date,
y = Romania$new_cases_per_million,
col = "cyan",
show.legend = TRUE) +
ylim(0,90)  +
scale_x_date(date_labels = "%B",
date_breaks = "1 month")  +
theme(axis.text.x = element_text(angle=45,
hjust = 1)) +  labs(title = "Levels of Stringency Index applied by the Romanian Governemnt")
ggplotly(int_stin)
int_stin <- Romania %>% ggplot(aes(x = date,
y = stringency_index)) +
geom_line(color = "blue") +
geom_point(x= Romania$date,
y = Romania$new_cases_per_million,
col = "cyan",
show.legend = TRUE) +
ylim(0,90)  +
scale_x_date(date_labels = "%B",
date_breaks = "1 month")  +
theme(axis.text.x = element_text(angle=45,
hjust = 1)) +  labs(title = "Levels of Stringency applied by the Romanian Governemnt")
int_stin <- Romania %>% ggplot(aes(x = date,
y = stringency_index)) +
geom_line(color = "blue") +
geom_point(x= Romania$date,
y = Romania$new_cases_per_million,
col = "cyan",
show.legend = TRUE) +
ylim(0,90)  +
scale_x_date(date_labels = "%B",
date_breaks = "1 month")  +
theme(axis.text.x = element_text(angle=45,
hjust = 1))
int_stin +  labs(title = "Stringency Index and new cases reported each day. Was it working?")
blogdown::serve_site()
ro$Month<- factor(ro$Month, levels = c("March", "April", "May", "June", "July","August"))
rp2 <- ro %>% ggplot(aes(x=deaths, y=recovered, color = Month)) + geom_point() + facet_wrap(~Month)
rp3 <- ro %>% ggplot(aes(x=deaths, y=recovered, color = Month)) + geom_point() +  labs(title = "Recovered to Death ratio of covid-19 positive cases in Romania") + ylab("new_deaths")
p1 <- ggplotly(rp2)
p2 <- ggplotly(rp3)
p2
ro$Month<- factor(ro$Month, levels = c("March", "April", "May", "June", "July","August"))
rp2 <- ro %>% ggplot(aes(x=deaths, y=recovered, color = Month)) + geom_point() + facet_wrap(~Month)
rp3 <- ro %>% ggplot(aes(x=deaths, y=recovered, color = Month)) + geom_point() +  labs(title = "Recovered to Death ratio of covid-19 positive cases in Romania") + xlab("new_deaths")
p1 <- ggplotly(rp2)
p2 <- ggplotly(rp3)
p2
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
View(Paki)
blogdown::serve_site()
blogdown::serve_site()
?icon
?icon_pack
install.packages("Rcpp",INSTALL_opts="--no-multiarch")
update.packages(ask=FALSE, checkBuilt=TRUE)
blogdown:::preview_site(startup = TRUE)
update.packages(ask=FALSE, checkBuilt=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(blogdown)
build_site()
serve_site()
build_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(blogdown)
blogdown:::serve_site()
install.packages("Rcpp")
serve_site()
serve_site()
